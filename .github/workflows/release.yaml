name: Build and Release Executable

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  PROJECTNAME: PROJECTNAME
  PROJECTNAME_WINDOWS: PROJECTNAME-Windows.exe
  PROJECTNAME_MACOS: PROJECTNAME-MacOS
  PROJECTNAME_LINUX: PROJECTNAME-Linux

permissions:
  contents: write

jobs:
  build_windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Clang
        run: choco install llvm -y

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: CMke Setting
        run: cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -B build

      - name: Compile with Clang
        run: cmake --build build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: build/${{ env.PROJECTNAME }}.exe

  build_macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: CMke Setting
        run: cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -B build

      - name: Compile with Clang
        run: cmake --build build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifact
          path: build/${{ env.PROJECTNAME }}

  build_linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Clang
        run: sudo apt-get update && sudo apt install -y clang llvm

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: CMake Setting
        run: cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -B build

      - name: Compile with Clang
        run: cmake --build build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifact
          path: build/${{ env.PROJECTNAME }}

  release:
    needs:
      - build_windows
      - build_macos
      - build_linux
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-artifact
          path: .

      - name: mv windows
        run: mv ${{ env.PROJECTNAME }}.exe ${{ env.PROJECTNAME_WINDOWS }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-artifact
          path: .

      - name: mv macos
        run: mv ${{ env.PROJECTNAME }} ${{ env.PROJECTNAME_MACOS }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-artifact
          path: .

      - name: mv linux
        run: mv ${{ env.PROJECTNAME }} ${{ env.PROJECTNAME_LINUX }}

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.PROJECTNAME_WINDOWS }},${{ env.PROJECTNAME_MACOS }},${{ env.PROJECTNAME_LINUX }}"
          tag: ${{ inputs.tag }}